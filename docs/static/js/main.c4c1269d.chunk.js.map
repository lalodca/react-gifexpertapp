{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGif.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","find","x","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","props","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAyCeA,EArCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAsBrC,OACI,0BAAMC,SAfW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAEV,OADcA,EAAKC,MAAK,SAAAC,GAAC,OAAIA,IAAMT,KAClB,YAAIO,GAEf,CAAEP,GAAR,mBAAuBO,OAE3BN,EAAc,OAMd,2BACIS,KAAK,OACLC,MAAOX,EACPY,SAvBc,SAACT,GACvBF,EAAcE,EAAEU,OAAOF,Y,uBCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGII,MAAMF,GAHV,cAGbG,EAHa,gBAIEA,EAASC,OAJX,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCeLO,EAdK,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEzB,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KC+BDO,EAjCC,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECHJ,SAACA,GAAc,IAAD,EACZhB,mBAAS,CAC/BuB,KAAM,GACNa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAgBtC,OAVAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGtB,CAACpB,IAEGqB,EDXwBK,CAAa1B,GAAhCa,EAFgB,EAErBN,KAAaa,EAFQ,EAERA,QAEpB,OACI,oCACI,wBAAIJ,UAAU,qCAAqChB,GAElDoB,GAAW,uBAAGJ,UAAU,oCAAb,cAEZ,yBAAKA,UAAU,aAEPH,EAAOJ,KAAI,SAAAC,GAAG,OACV,kBAAC,EAAD,eACIiB,IAAOjB,EAAIC,IACPD,UEmBjBkB,EAlCM,SAAAC,GAAU,IAAD,EAEU7C,mBAAS,CAAC,UAFpB,mBAEnB8C,EAFmB,KAEP/C,EAFO,KAS1B,OACI,oCACG,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAIA,4BAES+C,EAAWrB,KAAI,SAAAT,GAAQ,OACnB,kBAAC,EAAD,CACI2B,IAAK3B,EACLA,SAAUA,UCtBtC+B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.c4c1269d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if(inputValue.trim().length>2){\r\n            setCategories(cats => {\r\n                const exist = cats.find(x => x === inputValue);\r\n                if(exist) return [...cats];\r\n\r\n                return [inputValue, ...cats];\r\n            });\r\n            setInputValue('');\r\n        }   \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired    \r\n};\r\n\r\nexport default AddCategory;","\r\n\r\nexport const getGifs = async (category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=vIwimSJnVnJeZfoEhbF4wXIHruNBsUhM`;\r\n    const response = await fetch(url);\r\n    const {data} = await response.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    \r\n    return gifs;\r\n    \r\n}","import React from 'react';\r\n// import PropTypes from 'prop-types';\r\n\r\nconst GifGridItem = ({title, url}) => {\r\n    //console.log(title, url);\r\n    return (\r\n        <div className=\"card animate__animated animate__faceIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\n// GifGridItem.propTypes = {\r\n    \r\n// };\r\n\r\nexport default GifGridItem;","import React/* , { useState, useEffect } */ from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGif';\r\nimport GifGridItem from './GifGridItem';\r\n\r\n// import PropTypes from 'prop-types'\r\n\r\nconst GifGrid = ({category}) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n    \r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__bounce\">{category}</h3>\r\n\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n            \r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem\r\n                            key = {img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                    // images.map(({id, title}) => (\r\n                    //     <li key={id}>\r\n                    //         {title}\r\n                    //     </li>\r\n                    // ))\r\n                }\r\n            </div>  \r\n        </>\r\n    )\r\n}\r\n\r\n// GifGrid.propTypes = {\r\n\r\n// }\r\n\r\nexport default GifGrid;\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            });\r\n    }, [category]);\r\n\r\n    return state;\r\n}","import React from 'react';\r\n//import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = props => {\r\n\r\n    const [categories, setCategories] = useState(['Corgi']);\r\n\r\n    // const handleAdd = () => {\r\n    //     // setCategories([...categories, 'Gatitos']);    \r\n    //     setCategories( cats => [...cats, 'Gatitos']);\r\n    // }\r\n    \r\n    return (\r\n        <>\r\n           <h2>GifExpertApp</h2> \r\n           <AddCategory setCategories={setCategories}/>\r\n           <hr/>\r\n\r\n           \r\n\r\n           <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid\r\n                            key={category}\r\n                            category={category}/>\r\n                    ))\r\n                }\r\n           </ol>\r\n        </>\r\n    );\r\n};\r\n\r\n// GifExpertApp.propTypes = {\r\n    \r\n// };\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}